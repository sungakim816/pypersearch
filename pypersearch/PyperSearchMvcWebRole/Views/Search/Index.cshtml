@using System.Text.RegularExpressions;
@using System.Linq;
@model PagedList.IPagedList<PyperSearchMvcWebRole.Models.WebsitePage>

@{
    ViewBag.Title = "Search";
}
@Html.Partial("_NavSearchBar")
<div class="row container-fluid bg-transparent p-lg-4">
    @if ((Model != null && Model.PageCount > 0))
    {
        <div class="list-group list-group-flush w-50 text-break col-lg-6 mr-4 ml-4">
            @foreach (var page in Model)
            {
                <div class="list-group-item p-2" target="_blank">
                    <a href="@page.Url" class="d-flex w-100 text-decoration-none" target="_blank" onclick="incrementClicks('@page.PartitionKey', '@page.RowKey')">
                        <span class="mb-1 text-primary h5">@page.Title &nbsp;|&nbsp;@page.Domain</span>
                    </a>
                    <small class="mb-1 text-justify font-weight-normal">
                        <a href="@page.Url" target="_blank" class="text-decoration-none text-info" onclick="incrementClicks('@page.PartitionKey', '@page.RowKey')">@page.Url</a>
                    </small>
                    @{ string snippet = string.Join(" ", page.Content.Split(' ').Take(255));
                        ((List<string>)ViewBag.Keywords).ForEach(x => snippet = Regex.Replace(snippet, x, @"<strong>$0</strong>", RegexOptions.IgnoreCase));
                    }
                    <p class="text-black-50 small p-1">
                        @if (page.PublishDate != null)
                        {<span class="font-weight-bold">@page.PublishDate - </span>}
                        <span class="justify-content-sm-end">
                            @Html.Raw(WebUtility.HtmlDecode(snippet)).....
                        </span>
                    </p>
                </div>
            }
            <nav class="d-flex justify-content-lg-start w-50 p-2">
                <ul class="pagination pagination-sm">
                    <li class="page-item  @(@Model.HasPreviousPage? "": "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { query = ViewBag.Query, pageNumber = Model.PageNumber - 1 })"
                           tabindex="-1" aria-disabled="@(@Model.HasPreviousPage? "false": "true")">
                            Prev
                        </a>
                    </li>
                    @for (var pageNumber = 1; pageNumber <= Model.PageCount; pageNumber++)
                    {
                        <li class="page-item @(@Model.PageNumber == pageNumber? "active": "")">
                            <a class="page-link" href="@(Model.PageNumber == pageNumber? "#": @Url.Action("Index", new { query = ViewBag.Query, pageNumber = pageNumber }))">
                                @pageNumber
                            </a>
                        </li>
                    }
                    <li class="page-item @(@Model.HasNextPage? "": "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { query = ViewBag.Query, pageNumber = Model.PageNumber + 1 })"
                           tabindex="-1" aria-disabled="@(@Model.HasNextPage? "false": "true")">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else if (Model != null && Model.PageCount == 0 && ViewBag.NbaPlayer == null)
    {
        <div class="alert alert-info list-group list-group-flush text-break col m-4 w-75" role="alert">
            <div class="p-lg-4">
                <p class="h4 p-2">Your search <strong>@ViewBag.Query</strong> did not match any documents.</p>
                <p class="h5 p-2">Suggestions:</p>
                <ul>
                    <li> Make sure that all words are spelled correctly. </li>
                    <li>  Try different keywords. </li>
                    <li>Try more general keywords.</li>
                    <li> Try fewer keyword</li>
                </ul>
            </div>
        </div>
    }
    <div class="col">
        @if (ViewBag.NbaPlayer != null)
        {
            <div class="embed-responsive embed-responsive-1by1">
                <iframe class="embed-responsive-item" src="@ViewBag.NbaPlayer.Framelink"></iframe>
            </div>
        }
    </div>
</div>
@section scripts {
    <script>
        $("#home-tab").addClass("active");

        function updateQuerySuggestions(query) {
            if (query.length == 0) {
                return;
            }
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.open("GET", '@Url.Action("UpdateQuerySuggestions", "Search")' + '?query=' + query);
            xmlhttp.send();
        }

        function showQuerySuggestions(str) {
            if (str.length == 0) {
                $("#query-suggestions").empty();
                return;
            }
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#query-suggestions").show();
                    $("#query-suggestions").html(this.responseText);
                }
            }
            var actionUrl = '@Url.Action("Autocomplete", "Search")' + '?query=' + str;
            xmlhttp.open('GET', actionUrl, true);
            xmlhttp.send();
        }

        function changeSearchBoxValue(str) {
            if (str.length == 0) {
                return;
            }
            $("#search-box").val(str);
            $('#query-suggestions').hide();
            $('#search-box').focus();
        }

        function incrementClicks(partitionKey, rowKey) {
            var xmlhttp = new XMLHttpRequest();
            var actionUrl = "@Url.Action("IncrementClickRank", "Search")" + "?partitionkey=" + partitionKey + "&rowkey=" +rowKey;
            xmlhttp.open("GET", actionUrl, true);
            xmlhttp.send();
        }

    </script>
}


